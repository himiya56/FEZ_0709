//=============================================================================
//
// アイテム処理 [item.cpp]
// Author : 佐藤颯紀
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "item.h"
#include "manager.h"
#include "renderer.h"
//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPD3DXMESH	CItem::m_pMesh = NULL;
LPD3DXBUFFER CItem::m_pBuffMat = NULL;
DWORD CItem::m_nNumMat = NULL;
LPDIRECT3DTEXTURE9 CItem::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CItem::CItem()
{
	m_rot = DEFAULT_VECTOR;	// 向き
}

//=============================================================================
// デストラクタ
//=============================================================================
CItem::~CItem()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CItem::Init(void)
{
	// 初期化処理
	CScene3D::Init();

	BindMesh(m_pMesh, m_pBuffMat, m_nNumMat);
	BindTexture(m_pTexture);

	// 向きの初期化
	m_rot = DEFAULT_VECTOR;

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CItem::Uninit(void)
{
	// 終了処理
	CScene3D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CItem::Update(void)
{
	// 更新処理
	CScene3D::Update();

}

//=============================================================================
// 描画処理
//=============================================================================
void CItem::Draw(void)
{
	// 描画処理
	CScene3D::Draw();
}

