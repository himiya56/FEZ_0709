//=============================================================================
//
// タイトルに戻るボタン [button_back_to_title.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "sound.h"
#include "button_back_to_title.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_PASS ("data/TEXTURE/Button_ReturnTitle.png")		//テクスチャのパス

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CBackToTitleButton::m_pTexture = NULL;	//テクスチャのポインタ

//=============================================================================
// コンストラクタ
//=============================================================================
CBackToTitleButton::CBackToTitleButton()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CBackToTitleButton::~CBackToTitleButton()
{
}

//=============================================================================
// テクスチャ読み込み処理関数
//=============================================================================
HRESULT CBackToTitleButton::TextureLoad(void)
{
	//レンダラーの取得
	CRenderer *pRenderer = CManager::GetRenderer();
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();
	//テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,	//デバイスへのポインタ
		TEXTURE_PASS,					//ファイルの名前
		&m_pTexture);					//読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄処理関数
//=============================================================================
void CBackToTitleButton::TextureUnload(void)
{
	//もしテクスチャのポインタがNULLではない場合
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄処理関数呼び出し
		m_pTexture->Release();
		//テクスチャをNULLにする
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成処理関数
//=============================================================================
CBackToTitleButton * CBackToTitleButton::Create(D3DXVECTOR3 Position)
{
	//何らかのボタンのポインタ
	CBackToTitleButton * pBackToTitleButton = NULL;
	//何らかのボタンのポインタがNULLの場合
	if (pBackToTitleButton == NULL)
	{
		//何らかのボタンのメモリ確保
		pBackToTitleButton = new CBackToTitleButton;
		//何らかのボタンのポインタがNULLではない場合
		if (pBackToTitleButton != NULL)
		{
			//何らかのボタンの位置設定
			pBackToTitleButton->SetPos(Position);
			//何らかのボタンの初期化処理関数呼び出し
			pBackToTitleButton->Init();
		}
	}
	//何らかのボタンのポインタを返す
	return pBackToTitleButton;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CBackToTitleButton::Init(void)
{
	//ボタンの初期化処理関数呼び出し
	CButton::Init();
	//テクスチャの設定
	SetTexUV(0.0f, 1.0f, 0.0f, 1.0f);
	//テクスチャの割り当て
	BindTexture(m_pTexture);
	//選択時色変更処理関数呼び出し
	SelectColor();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CBackToTitleButton::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CButton::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CBackToTitleButton::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CButton::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CBackToTitleButton::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CButton::Draw();
}

//=============================================================================
// プレス処理関数
//=============================================================================
void CBackToTitleButton::Press(void)
{
	//押したときのサウンド再生
	PlayButtonSE(CButton::BUTTON_SE_PUSH);
	//タイトルモードに遷移する
	CManager::StartFade(CManager::MODE_TITLE);
}
