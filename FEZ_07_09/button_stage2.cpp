//=============================================================================
//
// ステージ2ボタン [button_stage2.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
//#include "sound.h"
#include "button_stage2.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_PASS ("data/TEXTURE/Button_Stage2.png")		//テクスチャのパス

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CStage2Button::m_pTexture = NULL;	//テクスチャのポインタ

//=============================================================================
// コンストラクタ
//=============================================================================
CStage2Button::CStage2Button()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CStage2Button::~CStage2Button()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CStage2Button::TextureLoad(void)
{
	//レンダラーの取得
	CRenderer *pRenderer = CManager::GetRenderer();
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();
	//テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,	//デバイスへのポインタ
		TEXTURE_PASS,					//ファイルの名前
		&m_pTexture);					//読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CStage2Button::TextureUnload(void)
{
	//もしテクスチャのポインタがNULLではない場合
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄処理関数呼び出し
		m_pTexture->Release();
		//テクスチャをNULLにする
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
CStage2Button * CStage2Button::Create(D3DXVECTOR3 Position)
{
	//ステージ2ボタンのポインタ
	CStage2Button * pStage2Button = NULL;
	//ステージ2ボタンのポインタがNULLの場合
	if (pStage2Button == NULL)
	{
		//ステージ2ボタンのメモリ確保
		pStage2Button = new CStage2Button;
		//ステージ2ボタンのポインタがNULLではない場合
		if (pStage2Button != NULL)
		{
			//ステージ2ボタンの位置設定
			pStage2Button->SetPos(Position);
			//ステージ2ボタンの初期化処理関数呼び出し
			pStage2Button->Init();
		}
	}
	//ステージ2ボタンのポインタを返す
	return pStage2Button;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CStage2Button::Init(void)
{
	//ボタンの初期化処理関数呼び出し
	CButton::Init();
	//テクスチャの設定
	SetTexUV(0.0f, 1.0f, 0.0f, 1.0f);
	//テクスチャの割り当て
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CStage2Button::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CButton::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CStage2Button::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CButton::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CStage2Button::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CButton::Draw();
}

//=============================================================================
// プレス処理関数
//=============================================================================
void CStage2Button::Press(void)
{
	////サウンドの取得
	//CSound * pSound = CManager::GetSound();
	////もしサウンドのポインタがNULLではない場合
	//if (pSound != NULL)
	//{
	//	//決定音の再生
	//	pSound->PlaySoundA(CSound::SOUND_LABEL_SE_BUTTON_PUSH);
	//}
	//ステージ2モードに遷移する
	CManager::StartFade(CManager::MODE_GAME_STAGE2);
}
