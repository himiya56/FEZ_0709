//=============================================================================
//
// ステージ3ボタン [button_stage3.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "button_stage3.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_PASS ("data/TEXTURE/stage3_Button.png")		//テクスチャのパス
#define SIZE (D3DXVECTOR3(400.0f,400.0f,0.0f))				//サイズ
#define ADD_SIZE (150.0f)									//サイズの加算量

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CStage3Button::m_pTexture = NULL;	//テクスチャのポインタ

//=============================================================================
// コンストラクタ
//=============================================================================
CStage3Button::CStage3Button()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CStage3Button::~CStage3Button()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CStage3Button::TextureLoad(void)
{
	//レンダラーの取得
	CRenderer *pRenderer = CManager::GetRenderer();
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();
	//テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,	//デバイスへのポインタ
		TEXTURE_PASS,					//ファイルの名前
		&m_pTexture);					//読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CStage3Button::TextureUnload(void)
{
	//もしテクスチャのポインタがNULLではない場合
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄処理関数呼び出し
		m_pTexture->Release();
		//テクスチャをNULLにする
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
CStage3Button * CStage3Button::Create(D3DXVECTOR3 Position)
{
	//ステージ3ボタンのポインタ
	CStage3Button * pStage3Button = NULL;
	//ステージ3ボタンのポインタがNULLの場合
	if (pStage3Button == NULL)
	{
		//ステージ3ボタンのメモリ確保
		pStage3Button = new CStage3Button;
		//ステージ3ボタンのポインタがNULLではない場合
		if (pStage3Button != NULL)
		{
			//ステージ3ボタンの位置設定
			pStage3Button->SetPos(Position);
			//ステージ3ボタンの初期化処理関数呼び出し
			pStage3Button->Init();
		}
	}
	//ステージ3ボタンのポインタを返す
	return pStage3Button;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CStage3Button::Init(void)
{
	//ボタンの初期化処理関数呼び出し
	CButton::Init();
	//テクスチャの設定
	SetTexUV(0.0f, 1.0f, 0.0f, 1.0f);
	//サイズ設定
	SetSize(SIZE.y, SIZE.x);
	//テクスチャの割り当て
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CStage3Button::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CButton::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CStage3Button::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CButton::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CStage3Button::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CButton::Draw();
}

//=============================================================================
// 選択時拡大処理関数
//=============================================================================
void CStage3Button::SelectExpansion(void)
{
	SetSize(SIZE.y + ADD_SIZE, SIZE.x + ADD_SIZE);
}

//=============================================================================
// 選択時縮小処理関数
//=============================================================================
void CStage3Button::NotSelectShrink(void)
{
	SetSize(SIZE.y, SIZE.x);
}

//=============================================================================
// プレス処理関数
//=============================================================================
void CStage3Button::Press(void)
{
	//押したときのサウンド再生
	PlayButtonSE(CButton::BUTTON_SE_PUSH);
	//ステージ3モードに遷移する
	CManager::StartFade(CManager::MODE_GAME_STAGE3);
}
